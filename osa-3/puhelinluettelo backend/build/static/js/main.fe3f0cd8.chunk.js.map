{"version":3,"sources":["components/All.js","components/Server.js","App.js","index.js"],"names":["Filter","props","value","handleFunc","handleFilterChange","onChange","Form","onSubmit","onSubmitButton","nameValue","onNameChange","numberValue","onNumberChange","type","Persons","personsToShow","persons","map","person","index","name","number","onClick","deletePerson","id","Message","message","className","Alert","URL","newPerson","axios","post","then","response","data","get","delete","put","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","filter","setFilter","setPersonsToShow","setMessage","alert","setAlert","goodMessage","setTimeout","alertMessage","useEffect","Server","notes","event","target","condition","toLowerCase","toLocaleLowerCase","includes","some","preventDefault","window","confirm","console","log","chosenPerson","indexOfThePerson","indexOf","fixedPerson","splice","catch","error","concat","lessPersons","parseInt","res","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fe3f0cd8.chunk.js","sourcesContent":["import React from 'react';\nimport './All.css'\n\nexport const Filter = (props) => {\n    const value = props.value\n    const handleFunc = props.handleFilterChange\n    return (\n      <div>\n        Filter: <input onChange={handleFunc} value={value} />\n      </div>\n    )\n}\n\nexport const Form = (props) => {\n    return (\n      <div>\n        <form onSubmit={props.onSubmitButton}>\n          <div>\n            Name: <input value={props.nameValue} onChange={props.onNameChange}/>\n          </div>\n          <div>\n            Number: <input value={props.numberValue} onChange={props.onNumberChange}/>\n          </div>\n          <div>\n            <button type=\"sumbit\">Add</button>\n          </div>\n        </form>\n      </div>\n    )\n}\n\nexport const Persons = (props) => {\n    const personsToShow = props.persons\n    return (\n      <div>\n          {personsToShow.map( (person, index) => <div key={index}>{person.name} {person.number} <button onClick={props.deletePerson} value={person.id}>Delete</button></div>)}\n      </div>\n    )\n}\n\nexport const Message = ({message}) => {\n  if (message === null || message === '') {\n    return null\n  }\n\n  return (\n    <div className=\"goodMessage\">\n      {message}\n    </div>\n  )\n}\n\nexport const Alert = ({message}) => {\n  if (message === null || message === '') {\n    return null\n  }\n\n  return (\n    <div className=\"alertMessage\">\n      {message}\n    </div>\n  )\n}","import axios from 'axios';\n\nconst URL = 'http://localhost:3001/api/persons'\n\nconst create = (newPerson) => {\n  const request = axios.post(URL, newPerson)\n\n  return  request.then( response => {\n      return response.data\n    })\n}\n\nconst getAll = () => {\n  return axios.get(URL).then( response => response.data)\n}\n\nconst deletePerson = id => {\n  return axios.delete(`${URL}/${id}`).then(response => response.data)\n}\n\nconst replace = (id, newPerson) => {\n  const request = axios.put(`${URL}/${id}`, newPerson)\n  return request.then( response => response.data)\n}\n\nexport default { create, getAll, deletePerson, replace }","import React, { useState, useEffect } from 'react';\nimport {Filter, Form, Persons, Message, Alert} from './components/All';\nimport Server from './components/Server';\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ personsToShow, setPersonsToShow ] = useState([])\n  const [ message, setMessage ] = useState('')\n  const [ alert, setAlert ] = useState('')\n\n  //Ilmoitusviesti\n  const goodMessage = (message) => {\n    setMessage(message)\n    setTimeout(() => {\n      setMessage('')\n    }, 3000)\n  }\n\n  //Error-viesti\n  const alertMessage = message => {\n    setAlert(message)\n    setTimeout(() => {\n      setAlert('')\n    }, 3000)\n  }\n\n\n  //Haetaan nimet palvelimelta\n  useEffect( () => {\n    Server.getAll().then(\n      notes => {\n        setPersons(notes)\n        setPersonsToShow(notes)\n      }\n    )\n  }, [])\n\n  const handleNameChange = (event) => {\n      setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n      setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n      setFilter(event.target.value)\n      //Muutetaan ehto pieniksi kirjaimiksi\n      const condition = event.target.value.toLowerCase()\n      //Muutetaan näkyvien henkilöiden listaa\n      setPersonsToShow(\n        persons.filter(\n          person => person.name.toLocaleLowerCase().includes(condition)\n        )\n      )\n  }\n\n  const newContact = (event) => {\n    //Luodaan uusilla tiedoilla olio\n    const newPerson = {\n      name: `${newName}`,\n      number: `${newNumber}`\n    }\n\n    //Tarkistetaan nimen perusteella, onko henkilö jo lisätty\n    if (\n      !persons.some(\n        person =>\n        person.name === `${newName}`\n      )\n    ) {\n\n    //Lisätään annettu henkilö\n    event.preventDefault()\n\n    Server.create(newPerson)\n      .then( newPerson => {\n        setPersons(persons.concat(newPerson))\n        setPersonsToShow(persons.concat(newPerson))\n        goodMessage(`Added ${newName}`)\n      })\n      .catch( error => {\n        alertMessage(`${error.response.data.error}`)\n        return \n      })\n\n    //Tyhjätään kentät\n    setNewName('')\n    setNewNumber('')\n    setFilter('')\n    \n\n    } else {\n      event.preventDefault()\n      if (window.confirm(`Do you want to replace ${newName}'s number?`)) {\n\n        //Henkilön numeron korvaaminen\n        console.log('Replacing...', newName);\n        const chosenPerson = persons.filter( person => person.name === newName )[0]\n        const id = chosenPerson.id\n        const indexOfThePerson = persons.indexOf(chosenPerson)\n        console.log(indexOfThePerson)\n\n        Server.replace(id, newPerson).then( fixedPerson => {\n          const newList = persons.splice(indexOfThePerson, 1, fixedPerson)\n          console.log(persons)\n          setNewName('')\n          setNewNumber('')\n          setFilter('')\n          goodMessage('Number was changed.')\n        }).catch( error => {\n          alertMessage('This contact no longer exists. Please refresh the page.')\n        })\n      }\n      }\n    }\n\n  //Henkilön poistaminen\n  const deletePerson = (event) => {\n    const id = event.target.value\n\n    //Tehdään varmistus\n    if (window.confirm(`Are you sure you want to delete this contact?`)) {\n    \n    console.log(id)\n\n    const lessPersons = persons.filter( person => person.id !== parseInt(id))\n\n    setPersons(lessPersons)\n    setPersonsToShow(lessPersons)\n\n    Server.deletePerson(id).then( res => {\n      goodMessage('Deleted successfully.')\n    })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n        <Message message={message}/>\n        <Alert message={alert} />\n        <Filter value={filter} handleFilterChange={handleFilterChange} />\n        <Form onSubmitButton={newContact} nameValue={newName} onNameChange={handleNameChange} numberValue={newNumber} onNumberChange={handleNumberChange} />\n      <h2>Numbers</h2>\n        <Persons persons={personsToShow} deletePerson={deletePerson}/>\n    </div>\n  )\n\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}